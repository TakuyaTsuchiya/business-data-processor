# Business Data Processor - Blue-Green Production Deployment
version: '3.8'

services:
  # Blue環境（現在稼働中）
  app-blue:
    build:
      context: ..
      dockerfile: Dockerfile
    image: business-data-processor:blue
    container_name: bdp-blue
    hostname: bdp-app-blue
    
    # 起動コマンド
    command: ["python", "-m", "streamlit", "run", "app.py", "--server.maxUploadSize", "100"]
    
    # ポート設定（内部ネットワークのみ）
    expose:
      - "8501"
    
    # ボリュームマウント設定（データ永続化）
    volumes:
      - ../data:/app/data:rw
      - ../downloads:/app/downloads:rw
      - ../logs:/app/logs:rw
    
    # 環境変数設定
    environment:
      - LANG=ja_JP.UTF-8
      - LC_ALL=ja_JP.UTF-8
      - LC_CTYPE=ja_JP.UTF-8
      - PYTHONIOENCODING=utf-8
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - APP_VERSION=blue
      - TZ=Asia/Tokyo
      - DEPLOYMENT_COLOR=blue
    
    # 再起動ポリシー
    restart: unless-stopped
    
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # ヘルスチェック設定
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # ネットワーク設定
    networks:
      - bdp-network
    
    labels:
      - "deployment=blue"
      - "version=${BLUE_VERSION:-latest}"

  # Green環境（新バージョンデプロイ用）
  app-green:
    build:
      context: ..
      dockerfile: Dockerfile
    image: business-data-processor:green
    container_name: bdp-green
    hostname: bdp-app-green
    
    # 起動コマンド
    command: ["python", "-m", "streamlit", "run", "app.py", "--server.maxUploadSize", "100"]
    
    # ポート設定（内部ネットワークのみ）
    expose:
      - "8501"
    
    # ボリュームマウント設定（Blueと共有）
    volumes:
      - ../data:/app/data:rw
      - ../downloads:/app/downloads:rw
      - ../logs:/app/logs:rw
    
    # 環境変数設定
    environment:
      - LANG=ja_JP.UTF-8
      - LC_ALL=ja_JP.UTF-8
      - LC_CTYPE=ja_JP.UTF-8
      - PYTHONIOENCODING=utf-8
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - APP_VERSION=green
      - TZ=Asia/Tokyo
      - DEPLOYMENT_COLOR=green
    
    # 再起動ポリシー
    restart: unless-stopped
    
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # ヘルスチェック設定
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # ネットワーク設定
    networks:
      - bdp-network
    
    labels:
      - "deployment=green"
      - "version=${GREEN_VERSION:-latest}"

  # Nginxリバースプロキシ
  nginx:
    image: nginx:alpine
    container_name: bdp-nginx
    hostname: bdp-nginx
    
    # ポート設定
    ports:
      - "80:80"
      - "443:443"
    
    # 設定ファイルマウント
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf:rw
      - ../nginx/ssl:/etc/nginx/ssl:ro
    
    # 環境変数
    environment:
      - TZ=Asia/Tokyo
    
    # 再起動ポリシー
    restart: always
    
    # 依存関係
    depends_on:
      - app-blue
      - app-green
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    # ネットワーク設定
    networks:
      - bdp-network
    
    labels:
      - "component=proxy"

# カスタムネットワーク定義
networks:
  bdp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16